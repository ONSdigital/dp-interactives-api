openapi: 3.0.0
info:
  description: The interactives API
  version: 1.0.0
  title: Interactives API
tags:
  - name: interactives
    description: CRUD for interactives
paths:
  /interactives:
    post:
      tags:
        - interactives
      summary: Upload a new interactive
      description: ''
      operationId: UploadInteractivesHandler
      requestBody:
        $ref: '#/components/requestBodies/NewInteractiveHandler'
      responses:
        '202':
          description: Accepted (returns the interactive)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interactive'
        '400':
          description: Bad request
        '500':
          description: Internal server error
    get:
      tags:
        - interactives
      summary: List all interactives (exclude deleted)
      description: ''
      operationId: ListInteractivesHandler
      parameters:
        - name: filter
          in: query
          description: >-
            {"associate_collection": true/false, "metadata" : {"title":
            "Interactive Title"}}
          required: false
          schema:
            type: object
            properties:
              associate_collection:
                type: boolean
              metadata:
                $ref: '#/components/schemas/InteractiveMetadata'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Interactive'
        '500':
          description: Internal error
  /interactives/{id}:
    put:
      tags:
        - interactives
      summary: Update an existing interactive (by id)
      description: ''
      operationId: UpdateInteractiveHandler
      parameters:
        - name: id
          in: path
          description: ID of interactive to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        $ref: '#/components/requestBodies/UpdateInteractiveHandler'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interactive'
        '400':
          description: Bad request
        '404':
          description: Interactive not found
        '500':
          description: Internal error
    get:
      tags:
        - interactives
      summary: Find an interactive by ID
      description: ''
      operationId: GetInteractiveMetadataHandler
      parameters:
        - name: id
          in: path
          description: ID of interactive to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interactive'
        '404':
          description: Interactive not found
        '500':
          description: Internal error
    delete:
      tags:
        - interactives
      summary: Sets the interactive as inactive
      description: Does not physically delete, only unsets the active flag.
      operationId: DeleteInteractivesHandler
      parameters:
        - name: id
          in: path
          description: ID of interactive to inactivate
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Success (no content)
        '404':
          description: Interactive not found
        '500':
          description: Internal error
    patch:
      tags:
        - interactives
      summary: Patch interactive with partial update
      description: >-
        Patch interactive with partial update for only attribute provided in
        request
      operationId: PatchInteractiveHandler
      requestBody:
        $ref: '#/components/requestBodies/PatchInteractiveHandler'
      parameters:
        - name: id
          in: path
          description: ID of interactive to inactivate
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Interactive'
        '400':
          description: Bad request
        '404':
          description: Interactive not found
        '500':
          description: Internal error
components:
  requestBodies:
    NewInteractiveHandler:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                description: Archive file for interactive
                type: string
                format: binary
              interactive:
                $ref: '#/components/schemas/Interactive'
            required:
              - file
              - interactive
          encoding:
            update:
              contentType: application/json
    UpdateInteractiveHandler:
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                description: Archive file for interactive
                type: string
                format: binary
              interactive:
                $ref: '#/components/schemas/Interactive'
            required:
              - interactive
          encoding:
            update:
              contentType: application/json
    PatchInteractiveHandler:
      content:
        application/json:
          schema:
            type: object
            properties:
              atttribute:
                description: attribute to patch
                type: string
              interactive:
                $ref: '#/components/schemas/Interactive'
            required:
              - interactive
          encoding:
            update:
              contentType: application/json
  schemas:
    Interactive:
      type: object
      properties:
        id:
          type: string
        published:
          type: boolean
        state:
          type: string
        metadata:
          $ref: '#/components/schemas/InteractiveMetadata'
        archive:
          type: object
          properties:
            import_message:
              type: string
            name:
              type: string
            size_in_bytes:
              type: integer
            files:
              type: array
              items:
                type: object
                properties:
                  mimetype:
                    type: string
                  size_in_bytes:
                    type: integer
                  name:
                    type: string
      xml:
        name: Interactive
    InteractiveMetadata:
      type: object
      properties:
        title:
          type: string
        label:
          type: string
        internal_id:
          type: string
        collection_id:
          type: string
        slug:
          type: string
        resource_id:
          type: string